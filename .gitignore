/*
* Raspberry Pi MusicCloud/Pij/BeatBox
* 
* Members:
* Don Phan - phand@purdue.edu
* Josh Selbo - jselbo@purdue.edu
* Anant Goel - goela@purdue.edu
* Jason Rahman - rahmanj@purdue.edu
*
*
* Description
* Our project is a modern day dj. Our server will be connected to a database which will hold locations
* of music files that are stored locally on to a raspberry pi. The server will poll music suggestions and
* play the highest voted song. If there are no song suggestions it will shuffle through the music list and play a song.
* Clients can use the IOS app to connect to the raspberry pi's hosted website to submit song selections. 
*
*/


------------------------------------

BIG DATES:

Wednesday April 16th 
	Whats due?
		Name of group members and e-mails
		Project name and description 
		Kind of phone platform


Friday May 2nd
	Whats due?
		Everything. Presentation day

------------------------------------
Milestones:


Week of: April 14th 
	-Figure out group
	-Discussion of overall projects 


Week of: April 21st
	-Database Crawling 
	-Selection of song and playing it with database
	-Rasberry Pi 
		-Server hosting
		-commincation with phone/ipad
		-Playing music
	-IOS 
		-Commicating with Rasberry pi
		-Sending music Requests

Week of: April 28th DUE THAT FRIDAY
	-Finishing up loose ends
	-Making it pretty and beautiful up to Anant's high standards
	-Robustness = Testing week

HOPEFUL:
Finish everything by April 30th


------------------------------------

Grading:

Creativity - How inovative is you application.

Potential of Success - In terms of usability for solving a specific problem for a few people , or potential for having a large number of people using the application.

Presentation- How nice the application looks. 

Technology - Features you use in your application.

Robustness - Application works well and it does not crash.

------------------------------------

Misc:

Github 





------------------------------------




Server:

Python crawler to store to a mySQL database. (Will not run every time. No need to crawl if there are no new songs to add to playlist)
	-Stores Song Name
	-Stores absolute file location
	-Probably can crawl on a computer and maybe have raspberry pi connect to it? 


Database:
	SongID - just a counter
	Song Name - Name of Song
	Location - Absolute Song location 


Server will be hosted on the Computer 
	-C/C++ 
	-Multithreaded
		-Thread 1 (Server)
			-Host website
			-Poll song suggestions
		-Thread 2
			-Select Song
			-Play song
		

Raspberry Pi - OS Rasbian(?)
	-Playing music


Client:
	Song Selection:
		-Populate a list(?) OR just do a filer where you enter keywords 
		-Send
	IOS Application 
	Objective C




